{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useCurrentUser } from '../../lib/hooks';\nexport default function PostEditor() {\n  var _useCurrentUser = useCurrentUser(),\n      _useCurrentUser2 = _slicedToArray(_useCurrentUser, 1),\n      user = _useCurrentUser2[0];\n\n  var _useState = useState(null),\n      msg = _useState[0],\n      setMsg = _useState[1];\n\n  if (!user) {\n    return __jsx(\"div\", {\n      style: {\n        color: '#555',\n        textAlign: 'center'\n      }\n    }, \"Please sign in to post\");\n  }\n\n  function hanldeSubmit(_x) {\n    return _hanldeSubmit.apply(this, arguments);\n  }\n\n  function _hanldeSubmit() {\n    _hanldeSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              body = {\n                content: e.currentTarget.content.value\n              };\n\n              if (e.currentTarget.content.value) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              e.currentTarget.content.value = '';\n              _context.next = 7;\n              return fetch('/api/posts', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 7:\n              res = _context.sent;\n\n              if (res.ok) {\n                setMsg('Posted!');\n                setTimeout(function () {\n                  return setMsg(null);\n                }, 5000);\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _hanldeSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: {\n      color: '#0070f3',\n      textAlign: 'center'\n    }\n  }, msg), __jsx(\"form\", {\n    onSubmit: hanldeSubmit,\n    style: {\n      flexDirection: 'row'\n    },\n    autoComplete: \"off\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, __jsx(\"input\", {\n    name: \"content\",\n    type: \"text\",\n    placeholder: \"Say something, I'm giving up on you...\"\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    style: {\n      marginLeft: '0.5rem'\n    }\n  }, \"Post\")));\n}","map":null,"metadata":{},"sourceType":"module"}