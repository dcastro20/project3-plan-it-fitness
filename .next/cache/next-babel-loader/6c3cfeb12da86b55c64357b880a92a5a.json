{"ast":null,"code":"import passport from 'passport';\nimport bcrypt from 'bcryptjs';\nimport { Strategy as LocalStrategy } from 'passport-local';\npassport.serializeUser((user, done) => {\n  done(null, user._id);\n}); // passport#160\n\npassport.deserializeUser((req, id, done) => {\n  req.db.collection('users').findOne({\n    _id: id\n  }).then(user => done(null, user));\n});\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passReqToCallback: true\n}, async (req, email, password, done) => {\n  const user = await req.db.collection('users').findOne({\n    email\n  });\n  if (user && (await bcrypt.compare(password, user.password))) done(null, user);else done(null, false, {\n    message: 'Email or password is incorrect'\n  });\n}));\nexport default passport;","map":null,"metadata":{},"sourceType":"module"}