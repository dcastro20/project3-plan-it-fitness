{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Head from 'next/head';\nimport { useCurrentUser } from '../lib/hooks';\n\nvar ProfileSection = function ProfileSection() {\n  var _useCurrentUser = useCurrentUser(),\n      _useCurrentUser2 = _slicedToArray(_useCurrentUser, 2),\n      user = _useCurrentUser2[0],\n      mutate = _useCurrentUser2[1].mutate;\n\n  var _useState = useState(false),\n      isUpdating = _useState[0],\n      setIsUpdating = _useState[1];\n\n  var nameRef = useRef();\n  var bioRef = useRef();\n  var profilePictureRef = useRef();\n\n  var _useState2 = useState({\n    message: '',\n    isError: false\n  }),\n      msg = _useState2[0],\n      setMsg = _useState2[1];\n\n  useEffect(function () {\n    nameRef.current.value = user.name;\n    bioRef.current.value = user.bio;\n  }, [user]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var formData, res, userData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!isUpdating) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setIsUpdating(true);\n              formData = new FormData();\n\n              if (profilePictureRef.current.files[0]) {\n                formData.append('profilePicture', profilePictureRef.current.files[0]);\n              }\n\n              formData.append('name', nameRef.current.value);\n              formData.append('bio', bioRef.current.value);\n              _context.next = 10;\n              return fetch('/api/user', {\n                method: 'PATCH',\n                body: formData\n              });\n\n            case 10:\n              res = _context.sent;\n\n              if (!(res.status === 200)) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.next = 14;\n              return res.json();\n\n            case 14:\n              userData = _context.sent;\n              mutate({\n                user: _objectSpread(_objectSpread({}, user), userData.user)\n              });\n              setMsg({\n                message: 'Profile updated'\n              });\n              _context.next = 25;\n              break;\n\n            case 19:\n              _context.t0 = setMsg;\n              _context.next = 22;\n              return res.text();\n\n            case 22:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                message: _context.t1,\n                isError: true\n              };\n              (0, _context.t0)(_context.t2);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitPasswordChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var body, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              body = {\n                oldPassword: e.currentTarget.oldPassword.value,\n                newPassword: e.currentTarget.newPassword.value\n              };\n              e.currentTarget.oldPassword.value = '';\n              e.currentTarget.newPassword.value = '';\n              _context2.next = 6;\n              return fetch('/api/user/password', {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 6:\n              res = _context2.sent;\n\n              if (!(res.status === 200)) {\n                _context2.next = 11;\n                break;\n              }\n\n              setMsg({\n                message: 'Password updated'\n              });\n              _context2.next = 17;\n              break;\n\n            case 11:\n              _context2.t0 = setMsg;\n              _context2.next = 14;\n              return res.text();\n\n            case 14:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = {\n                message: _context2.t1,\n                isError: true\n              };\n              (0, _context2.t0)(_context2.t2);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmitPasswordChange(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function sendVerificationEmail() {\n    return _sendVerificationEmail.apply(this, arguments);\n  }\n\n  function _sendVerificationEmail() {\n    _sendVerificationEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/api/user/email/verify', {\n                method: 'POST'\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _sendVerificationEmail.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Settings\")), __jsx(\"section\", null, __jsx(\"h2\", null, \"Edit Profile\"), msg.message ? __jsx(\"p\", {\n    style: {\n      color: msg.isError ? 'red' : '#0070f3',\n      textAlign: 'center'\n    }\n  }, msg.message) : null, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, !user.emailVerified ? __jsx(\"p\", null, \"Your email has not been verify.\", ' ', __jsx(\"a\", {\n    role: \"button\",\n    onClick: sendVerificationEmail\n  }, \"Send verification email\")) : null, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Name\", __jsx(\"input\", {\n    required: true,\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Your name\",\n    ref: nameRef\n  })), __jsx(\"label\", {\n    htmlFor: \"bio\"\n  }, \"Bio\", __jsx(\"textarea\", {\n    id: \"bio\",\n    name: \"bio\",\n    type: \"text\",\n    placeholder: \"Bio\",\n    ref: bioRef\n  })), __jsx(\"label\", {\n    htmlFor: \"avatar\"\n  }, \"Profile picture\", __jsx(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    name: \"avatar\",\n    accept: \"image/png, image/jpeg\",\n    ref: profilePictureRef\n  })), __jsx(\"button\", {\n    disabled: isUpdating,\n    type: \"submit\"\n  }, \"Save\")), __jsx(\"form\", {\n    onSubmit: handleSubmitPasswordChange\n  }, __jsx(\"label\", {\n    htmlFor: \"oldpassword\"\n  }, \"Old Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"oldPassword\",\n    id: \"oldpassword\",\n    required: true\n  })), __jsx(\"label\", {\n    htmlFor: \"newpassword\"\n  }, \"New Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"newPassword\",\n    id: \"newpassword\",\n    required: true\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Change Password\"))));\n};\n\nvar SettingPage = function SettingPage() {\n  var _useCurrentUser3 = useCurrentUser(),\n      _useCurrentUser4 = _slicedToArray(_useCurrentUser3, 1),\n      user = _useCurrentUser4[0];\n\n  if (!user) {\n    return __jsx(React.Fragment, null, __jsx(\"p\", null, \"Please sign in\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Settings\"), __jsx(ProfileSection, null));\n};\n\nexport default SettingPage;","map":null,"metadata":{},"sourceType":"module"}