{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useCurrentUser } from '../lib/hooks';\n\nvar SignupPage = function SignupPage() {\n  var _useCurrentUser = useCurrentUser(),\n      _useCurrentUser2 = _slicedToArray(_useCurrentUser, 2),\n      user = _useCurrentUser2[0],\n      mutate = _useCurrentUser2[1].mutate;\n\n  var _useState = useState(''),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  useEffect(function () {\n    // redirect to home if user is authenticated\n    if (user) Router.replace('/');\n  }, [user]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, res, userObj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              body = {\n                email: e.currentTarget.email.value,\n                name: e.currentTarget.name.value,\n                password: e.currentTarget.password.value\n              };\n              _context.next = 4;\n              return fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 4:\n              res = _context.sent;\n\n              if (!(res.status === 201)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              userObj = _context.sent;\n              mutate(userObj);\n              _context.next = 17;\n              break;\n\n            case 12:\n              _context.t0 = setErrorMsg;\n              _context.next = 15;\n              return res.text();\n\n            case 15:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sign up\")), __jsx(\"div\", null, __jsx(\"h2\", null, \"Sign up\"), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, errorMsg ? __jsx(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, errorMsg) : null, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, __jsx(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Your name\"\n  })), __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, __jsx(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email address\"\n  })), __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, __jsx(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Create a password\"\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Sign up\")), __jsx(\"p\", {\n    style: {\n      color: '#777',\n      textAlign: 'center'\n    }\n  }, \"Note: The database is public. For your privacy, please avoid using your personal, work email.\")));\n};\n\nexport default SignupPage;","map":null,"metadata":{},"sourceType":"module"}