{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport nextConnect from 'next-connect';\nimport Router from 'next/router';\nimport database from '../../middlewares/database';\n\nconst ResetPasswordTokenPage = ({\n  valid,\n  token\n}) => {\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const body = {\n      password: event.currentTarget.password.value,\n      token\n    };\n    const res = await fetch('/api/user/password/reset', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    if (res.status === 200) Router.replace('/');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-3269325724\"\n  }, \"Forget password\")), __jsx(_JSXStyle, {\n    id: \"3269325724\"\n  }, [\"p.jsx-3269325724{text-align:center;}\"]), __jsx(\"h2\", {\n    className: \"jsx-3269325724\"\n  }, \"Forget password\"), valid ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"jsx-3269325724\"\n  }, \"Enter your new password.\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-3269325724\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3269325724\"\n  }, __jsx(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"New password\",\n    className: \"jsx-3269325724\"\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-3269325724\"\n  }, \"Set new password\"))) : __jsx(\"p\", {\n    className: \"jsx-3269325724\"\n  }, \"This link may have been expired\"));\n};\n\nexport async function getServerSideProps(ctx) {\n  const handler = nextConnect();\n  handler.use(database);\n  await handler.apply(ctx.req, ctx.res);\n  const {\n    token\n  } = ctx.query;\n  const tokenDoc = await ctx.req.db.collection('tokens').findOne({\n    token: ctx.query.token,\n    type: 'passwordReset'\n  });\n  return {\n    props: {\n      token,\n      valid: !!tokenDoc\n    }\n  };\n}\nexport default ResetPasswordTokenPage;","map":null,"metadata":{},"sourceType":"module"}